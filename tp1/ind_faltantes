#!/usr/bin/env python
import os, csv, random, sys
from collections import Counter

# uso:
# ./ind_faltantes [archivo] [nro. de campo a modificar (empezando en 0)]
#
# ejemplo:
# ./ind_faltantes dataset.csv 2

input_data_file = sys.argv[1]
field_number = int(sys.argv[2])

def seq(start, stop, step=1):
    n = int(round((stop - start) / float(step)))
    if n > 1: return([start + step*i for i in range(n+1)])
    else: return([])
    
# sets field number [i] in record [r] to value [m]
#
def set_missing(r, i, m):
    altered_record = r[:]
    altered_record[i] = m
    return altered_record

# selects a sample of size [percentage]% of records [rr]
# and applies 'set_missing' transformation to those records
#
def transform_dataset(rr, percentage):
    number_of_records_to_alter = int((percentage / 100.0) * len(records))
    indices_to_alter = random.sample(record_indices, number_of_records_to_alter)
    altered_records = [set_missing(record, field_number, field_mode_value) if index in indices_to_alter else record for (index, record) in enumerate(records)]
    return altered_records
    
# reads input data file and calculates mode for the given field
#
with open(input_data_file, 'r') as csvfile:
    freader = csv.reader(csvfile, delimiter=';', quotechar='"')
    records = [record for record in freader]
    (field_names, records) = (records[0], records[1:])
    record_indices = range(0, len(records))
    value_counter = Counter([record[field_number] for record in records])
    field_mode_name, field_mode_value = value_counter.most_common(1)[0]
    print("moda del campo %s: %s, %d" % (field_names[field_number], field_mode_name, field_mode_value))
          
# outputs altered datasets, one per file
#
for missing_percentage in seq(0, 85, step=2.5):
    basename, extension = os.path.splitext(input_data_file)
    output_data_file = basename + '.faltante.' + str(missing_percentage) + extension

    with open(output_data_file, 'w') as csvfile:
        fwriter = csv.writer(csvfile, delimiter=';')
        fwriter.writerow(field_names)
        altered_records = transform_dataset(records, missing_percentage)
        fwriter.writerows(altered_records)

    print("%s: done" % output_data_file)
